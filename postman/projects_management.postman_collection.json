{
	"info": {
		"_postman_id": "234843fb-0d99-4664-88a3-4820aa177b33",
		"name": "projects_management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6619421"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = JSON.parse(this.responseBody);\r",
									"pm.collectionVariables.set(\"token\", responseBody.data.token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "first_name",
									"value": "ibraheem",
									"description": "first_name (string, required): A text value with a minimum length of 3 characters and a maximum length of 50 characters.\n",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "hadi",
									"description": "last_name (string, required): A text value with a minimum length of 3 characters and a maximum length of 50 characters.\n",
									"type": "text"
								},
								{
									"key": "email",
									"value": "ibraheem99@gmail.com",
									"description": "email (string, required): A valid email address (RFC-compliant) that must be unique in the users table, with a maximum length of 200 characters.\n",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"description": "password (string, required): A text value with a minimum length of 8 characters.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}register",
							"host": [
								"{{url}}register"
							]
						}
					},
					"response": [
						{
							"name": "register validation error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "ibraheem",
											"description": "first_name (string, required): A text value with a minimum length of 3 characters and a maximum length of 50 characters.\n",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "hadi",
											"description": "last_name (string, required): A text value with a minimum length of 3 characters and a maximum length of 50 characters.\n",
											"type": "text"
										},
										{
											"key": "email",
											"value": "ibraheem9omar@gmail.com",
											"description": "email (string, required): A valid email address (RFC-compliant) that must be unique in the users table, with a maximum length of 200 characters.\n",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"description": "password (string, required): A text value with a minimum length of 8 characters.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}register",
									"host": [
										"{{url}}register"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.3.14"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Mon, 17 Mar 2025 10:08:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"errors\": {\n            \"email\": [\n                \"The email has already been taken.\"\n            ]\n        }\n    },\n    \"msg\": \"validation errors\",\n    \"status\": false,\n    \"code\": 200\n}"
						},
						{
							"name": "register successful",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "ibraheem",
											"description": "first_name (string, required): A text value with a minimum length of 3 characters and a maximum length of 50 characters.\n",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "hadi",
											"description": "last_name (string, required): A text value with a minimum length of 3 characters and a maximum length of 50 characters.\n",
											"type": "text"
										},
										{
											"key": "email",
											"value": "ibraheem99@gmail.com",
											"description": "email (string, required): A valid email address (RFC-compliant) that must be unique in the users table, with a maximum length of 200 characters.\n",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"description": "password (string, required): A text value with a minimum length of 8 characters.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}register",
									"host": [
										"{{url}}register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.3.14"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Mon, 17 Mar 2025 10:09:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"code\": 200,\n    \"msg\": \"\",\n    \"data\": {\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiNmQ1ZWZmZTM4MmRhYjk2NDNjY2UyZDIyZjFmMGNmMDIzODgyODUzMmM1NjJlM2I5N2Y3MGRmMzk5NTI2ZWQ1YjBkOGU3M2E5YWJkN2NlNzAiLCJpYXQiOjE3NDIyMDYxNTIuNjM2OTcxLCJuYmYiOjE3NDIyMDYxNTIuNjM2OTczLCJleHAiOjE3NzM3NDIxNTIuNjM0MDkxLCJzdWIiOiI2Iiwic2NvcGVzIjpbXX0.O0GbLo8Id4FFQD16ZO9gJi3FH8g4CXQ0dOthOAvGuY9nuc-AjyNby96KO9AmNADjbWbbCS4iksXzk8EZooHqPvJKd8abWQfGRIYa0VHqY7icwXuwpFAjVR7MLOCyVq1tuG_1AQ4SwRObE9nVteWFKwcNm73MEYmW4PpxuCdXQsNmPOHRKJREhM-z4F_m64HdQcuc6PzVKoCrHIAQBBcJ3i_yZzYr7uA02xE45oat2-R_TPgmMTce1p341tbCchfWepbQ-BF4ld8uA4qMOil3BG9QUClueHcHAO8On6irfuFwT7sn5knhXcBI27pCizvXtenH8o3r3oLzmAhyeHs90pBKqQ_oAW18Nkjv-CtdpDWrO41pzVH2Jw-TbPklWWqHHzM4iwtcMVXlYBPz0VW37uQoSSYmh8BrIsD9jEuN6JvvaUiiFQwqvZ9PDhttlPdWev-DZlRYEPdb26XfTcVCCc-GsaJZdj5H7h5UoP0aFaxqadLigrd5yDGbMpn2DTsagcpdsLvlWBPhTx17sxSVIXJ6NEFFJ_QiOjgr7IyMXW2W5L9dJrC840WC8EWHzffBAwvozTqtxLvaovPMjPICSQ7CniCpD78DZtyVmyVUbITvnNtGgqpKMVqwjaj7BfyqqebarzhWddQYWesOpIPZ4kKSE2X-hi-PzeRygxd0bXg\",\n        \"user\": {\n            \"first_name\": \"ibraheem\",\n            \"last_name\": \"hadi\",\n            \"email\": \"ibraheem99@gmail.com\",\n            \"updated_at\": \"2025-03-17T10:09:12.000000Z\",\n            \"created_at\": \"2025-03-17T10:09:12.000000Z\",\n            \"id\": 6\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = JSON.parse(this.responseBody);\r",
									"pm.collectionVariables.set(\"token\", responseBody.data.token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "john.doe@example.com",
									"description": "email (string, required): A valid email address (RFC-compliant) with a maximum length of 200 characters.",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password123",
									"description": "password (required): A text value with a maximum length of 50 characters.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}login",
							"host": [
								"{{url}}login"
							]
						}
					},
					"response": [
						{
							"name": "login success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "john.doe@example.com",
											"description": "email (string, required): A valid email address (RFC-compliant) with a maximum length of 200 characters.",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password123",
											"description": "password (required): A text value with a maximum length of 50 characters.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}login",
									"host": [
										"{{url}}login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.3.14"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Mon, 17 Mar 2025 10:11:00 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"code\": 200,\n    \"msg\": \"\",\n    \"data\": {\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiNDNiN2FkODUzYmU0MmRhZDIyZTJkOWFmMDJmNjdmZTdjZmQ2NDBmY2ZmZGJkYTdmZDJhMGU2ODE0ZDQ5YTFlODhmMDQ3MDc0YzI5OWY2YjQiLCJpYXQiOjE3NDIyMDYyNjAuMDQ1NzE3LCJuYmYiOjE3NDIyMDYyNjAuMDQ1NzE5LCJleHAiOjE3NzM3NDIyNjAuMDQyNTI2LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.nh-Ck5XNiLGyWltuYdG5ZF8kkzYEheSFNTlryT4ne3f6537QYzIxWs-yHECZVcZ6I1SBOHpUP1mVoD9Uf1KN8LsIAufCJhrgNt_AivygEjN2bhxJBsvprWizN_MxyLmMatWXwcyKzUhSaV4GaYENzJeZ4Vveep4HrgwxSsjtSL5QhMaY3WghDQZ94x7SxEiehI5I_5ocqN2fvAkhD88DYzaI_7oYcmRshymjOo7Gy0v8JkxEfuS1fZgEuxrhnnw9ux0yK7R1BGuXGkezsaBwJAPyRTnV3pYvhfC-YLU9ucYZpvXqIK93aMA_3mO8AATj_J1CJWm9fqYEU-f4-gTW5NuMJj72DejNSoAyRVgYEKoepjSUrkVBSZTyWTAI31aWErAQ-hXoC_OsLPIVAHHkqSepRr7onO8TWEFgNiGyWK_fyDviOyzQ1FJxLA6xVXrygfM1L97gOUaW38UXV8S_3Vqr2Ik2hZwEGMdzyQ1c2-wizZB7mWnmfreEZq2sWV1uact9njd_33sDPALyr60rpipcaRvlbHYXmecPjZdUQgDYNWWkXJFErApRAEn3iGb0kzTedu2mMZxXNTcglkC9U3Uqzpm1KIzM5l-zl3jYj6W-8rz_vHCq86vOlI1hqVVhXs8AJXTJn5Z7rZEt4FRy1Do5qXcUWGG7t-1kwAlmLe8\",\n        \"user\": {\n            \"id\": 1,\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"email\": \"john.doe@example.com\",\n            \"email_verified_at\": null,\n            \"created_at\": \"2025-03-16T12:23:12.000000Z\",\n            \"updated_at\": \"2025-03-16T12:23:12.000000Z\",\n            \"deleted_at\": null\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = JSON.parse(this.responseBody);\r",
									"pm.collectionVariables.set(\"token\", responseBody.data.token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}logout",
							"host": [
								"{{url}}logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "projects",
			"item": [
				{
					"name": "add new project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"<style type=\"text/css\">\r",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
									"    .tftable tr {background-color:#ffffff;}\r",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
									"    .tftable tr:hover {background-color:#e0ffff;}\r",
									"</style>\r",
									"\r",
									"<table class=\"tftable\" border=\"1\">\r",
									"    <tr>\r",
									"        <th>Message</th>\r",
									"    </tr>\r",
									"    <tr>\r",
									"        <td>{{response.message}}</td>\r",
									"    </tr>\r",
									"</table>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return { response: pm.response.json() }\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Project A\", \r\n    \"status\": \"active\",\r\n    \"attributes\": [\r\n        {\r\n            \"id\": 1,\r\n            \"value\": \"IT Department\" \r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"value\": \"2025-05-01\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}projects",
							"host": [
								"{{url}}projects"
							]
						}
					},
					"response": [
						{
							"name": "add new project success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Project A\", \r\n    \"status\": \"active\",\r\n    \"attributes\": [\r\n        {\r\n            \"id\": 1,\r\n            \"value\": \"IT Department\" \r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"value\": \"2025-05-01\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}projects",
									"host": [
										"{{url}}projects"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.3.14"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Mon, 17 Mar 2025 10:11:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"code\": 200,\n    \"msg\": \"Project created successfully\",\n    \"data\": {\n        \"name\": \"Project A\",\n        \"status\": \"active\",\n        \"updated_at\": \"2025-03-17T10:11:22.000000Z\",\n        \"created_at\": \"2025-03-17T10:11:22.000000Z\",\n        \"id\": 12,\n        \"attributes\": [\n            {\n                \"id\": 15,\n                \"attribute_id\": 1,\n                \"entity_id\": 12,\n                \"value\": \"IT Department\",\n                \"created_at\": \"2025-03-17T10:11:22.000000Z\",\n                \"updated_at\": \"2025-03-17T10:11:22.000000Z\",\n                \"attribute\": {\n                    \"id\": 1,\n                    \"name\": \"department\",\n                    \"type\": \"text\",\n                    \"created_at\": \"2025-03-16T12:23:12.000000Z\",\n                    \"updated_at\": \"2025-03-16T12:23:12.000000Z\"\n                }\n            },\n            {\n                \"id\": 16,\n                \"attribute_id\": 2,\n                \"entity_id\": 12,\n                \"value\": \"2025-05-01\",\n                \"created_at\": \"2025-03-17T10:11:22.000000Z\",\n                \"updated_at\": \"2025-03-17T10:11:22.000000Z\",\n                \"attribute\": {\n                    \"id\": 2,\n                    \"name\": \"start_date\",\n                    \"type\": \"date\",\n                    \"created_at\": \"2025-03-16T12:23:12.000000Z\",\n                    \"updated_at\": \"2025-03-16T12:23:12.000000Z\"\n                }\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "update project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Project A\",\r\n    \"status\": \"active\",\r\n    \"attributes\": [\r\n        {\r\n            \"id\": 1,\r\n            \"value\": \"IT Department\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"value\": \"2025-05-28\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}projects/1",
							"host": [
								"{{url}}projects"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Specific Project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}projects/1",
							"host": [
								"{{url}}projects"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Projects",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}projects?filters[budget][operator]=>&filters[budget][value]=5000",
							"host": [
								"{{url}}projects"
							],
							"query": [
								{
									"key": "filters[budget][operator]",
									"value": ">",
									"description": "Supported operators are: =, >, <, LIKE."
								},
								{
									"key": "filters[budget][value]",
									"value": "5000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}projects/1",
							"host": [
								"{{url}}projects"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Timesheet",
			"item": [
				{
					"name": "add new Timesheet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"<style type=\"text/css\">\r",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
									"    .tftable tr {background-color:#ffffff;}\r",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
									"    .tftable tr:hover {background-color:#e0ffff;}\r",
									"</style>\r",
									"\r",
									"<table class=\"tftable\" border=\"1\">\r",
									"    <tr>\r",
									"        <th>Message</th>\r",
									"    </tr>\r",
									"    <tr>\r",
									"        <td>{{response.message}}</td>\r",
									"    </tr>\r",
									"</table>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return { response: pm.response.json() }\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"task_name\": \"Develop Feature X\",\r\n  \"date\": \"2025-03-16\",\r\n  \"hours\": 8,\r\n  \"user_id\": 1,\r\n  \"project_id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}timesheets",
							"host": [
								"{{url}}timesheets"
							]
						}
					},
					"response": []
				},
				{
					"name": "update Timesheet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"task_name\": \"Develop Feature Y\",\r\n  \"date\": \"2025-03-18\",\r\n  \"hours\": 50,\r\n  \"user_id\": 1,\r\n  \"project_id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}timesheets/1",
							"host": [
								"{{url}}timesheets"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Specific Timesheet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}timesheets/1",
							"host": [
								"{{url}}timesheets"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Timesheets",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}timesheets",
							"host": [
								"{{url}}timesheets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Timesheet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}timesheets/1",
							"host": [
								"{{url}}timesheets"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "attributes",
			"item": [
				{
					"name": "add new Attribute",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "start_at",
									"description": "name (string, required): A unique text value with a maximum length of 200 characters, and must be unique in the attributes table for the name field.",
									"type": "text"
								},
								{
									"key": "type",
									"value": "date",
									"description": "type (required): A value that must be one of the following: text, date, number, or select.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}attributes",
							"host": [
								"{{url}}attributes"
							]
						}
					},
					"response": []
				},
				{
					"name": "update Attribute",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "budget",
									"description": "name (string, required): A unique text value with a maximum length of 200 characters, and must be unique in the attributes table for the name field.",
									"type": "text"
								},
								{
									"key": "type",
									"value": "number",
									"description": "type (required): A value that must be one of the following: text, date, number, or select.\n",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}attributes/1",
							"host": [
								"{{url}}attributes"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Specific Attribute",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}attributes/1",
							"host": [
								"{{url}}attributes"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Attribute",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}attributes",
							"host": [
								"{{url}}attributes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Attribute",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}attributes/1",
							"host": [
								"{{url}}attributes"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.request.headers.add({\r",
					"  key: \"Accept\",\r",
					"  value: \"application/json\"\r",
					"});\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://127.0.0.1:8000/api/"
		},
		{
			"key": "live_url",
			"value": ""
		},
		{
			"key": "local_url",
			"value": ""
		},
		{
			"key": "dev_url",
			"value": "",
			"type": "string"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}